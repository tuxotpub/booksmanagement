--  drop for test only --
drop schema if exists bm cascade;
drop schema if exists bm_aud cascade;

create schema if not exists bm;
create schema if not exists bm_aud;

--Tables--
create table if not exists bm.author
(
    id         serial not null,
    created_by varchar(255),
    created_on timestamp  default now(),
    updated_by varchar(255),
    updated_on timestamp default now(),
    email      varchar(255) unique,
    name       varchar(255),
    surname    varchar(255),
    primary key (id)
);

create table if not exists bm.publication
(
    id           serial not null,
    created_by   varchar(255),
    created_on   timestamp default now(),
    updated_by   varchar(255),
    updated_on   timestamp default now(),
    description  varchar(255),
    isbn         varchar(255) unique,
    release_date date,
    title        varchar(255),
    type         varchar(255),
    primary key (id)
);


create table if not exists bm.publication_author
(
    publication_id bigint not null,
    author_id      bigint not null,
    primary key (publication_id, author_id),
    foreign key (publication_id) references bm.publication,
    foreign key (author_id) references bm.author
);

--Audit--
create table if not exists bm_aud.revinfo
(
    rev      integer generated by default as identity,
    revtstmp bigint,
    primary key (rev)
);

create table if not exists bm_aud.author_aud
(
    id         bigint  not null,
    rev        integer not null,
    revtype    tinyint,
    created_by varchar(255),
    created_on timestamp default now(),
    updated_by varchar(255),
    updated_on timestamp default now(),
    email      varchar(255),
    name       varchar(255),
    surname    varchar(255),
    primary key (id, rev)
);

create table if not exists bm_aud.publication_aud
(
    id           bigint  not null,
    rev          integer not null,
    revtype      tinyint,
    created_by   varchar(255),
    created_on   timestamp default now(),
    updated_by   varchar(255),
    updated_on   timestamp default now(),
    description  varchar(255),
    isbn         varchar(255),
    release_date date,
    title        varchar(255),
    type         varchar(255),
    primary key (id, rev)
);

create table if not exists bm_aud.publication_author_aud
(
    rev            integer not null,
    publication_id bigint  not null,
    author_id      bigint  not null,
    revtype        tinyint,
    primary key (rev, publication_id, author_id)
);
